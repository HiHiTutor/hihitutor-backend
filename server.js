const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const bodyParser = require("body-parser");
const path = require("path");
require("dotenv").config({ path: path.resolve(__dirname, ".env") });

const app = express();
const PORT = process.env.PORT || 5000;
const MONGO_URI = process.env.MONGO_URI || "mongodb://127.0.0.1:27017/hihitutor";

<<<<<<< HEAD
// CORS Ë®≠ÂÆö
=======
// ‚úÖ Ëá™Ë®ÇÈ¶ñÈ†ÅË™™ÊòéË∑ØÁî±
app.get("/", (req, res) => {
  res.json({ message: "‚úÖ HiHiTutor API Â∑≤ÂïüÂãïÔºåË´ã‰ΩøÁî® /api ÈñãÈ†≠ÁöÑË∑ØÁî±„ÄÇ" });
});


// ‚úÖ Ë®≠ÂÆö CORSÔºåÁ¢∫‰øù API ÂèØË¢´ÂâçÁ´ØËÆÄÂèñ
>>>>>>> 0c9c3d9 (fix: tidy up route definitions and add root / message)
app.use(cors({
  origin: "*", // ‚úÖ ÊîπÁÇ∫ * ÈÅøÂÖç Render ÈÅ†Á´ØÈôêÂà∂Ôºå‰πãÂæåÂèØÂÜçÊî∂Á∑ä
  methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS",
  credentials: true,
  allowedHeaders: ["Content-Type", "Authorization", "Range"],
  exposedHeaders: ["Content-Range", "X-Total-Count"]
}));

app.use(express.json());
app.use(bodyParser.json());
app.use(express.urlencoded({ extended: true }));

app.use((req, res, next) => {
  console.log(`üìå API Ë´ãÊ±Ç: ${req.method} ${req.url}`, req.body);
  next();
});

mongoose.connect(MONGO_URI)
  .then(() => {
    console.log("‚úÖ ÊàêÂäüÈÄ£Êé• MongoDB");

    // ËºâÂÖ•Ë∑ØÁî±
    const userRoutes = require(path.join(__dirname, "routes/userRoutes"));
    const studentRoutes = require(path.join(__dirname, "routes/studentRoutes"));
    const tutorRoutes = require(path.join(__dirname, "routes/tutorRoutes"));
    const caseRoutes = require(path.join(__dirname, "routes/caseRoutes"));
    const profileRoutes = require(path.join(__dirname, "routes/profileRoutes"));

    app.use("/api/users", userRoutes);
    app.use("/api/students", studentRoutes);
    app.use("/api/tutors", tutorRoutes);
    app.use("/api/cases", caseRoutes);
    app.use("/api/profiles", profileRoutes);

    app.get("/api", (req, res) => {
      res.json({ message: "üöÄ HiHiTutor API is running!" });
    });

    app.use((req, res, next) => {
      res.status(404).json({ error: "‚ùå API Ë∑ØÁî±‰∏çÂ≠òÂú®" });
    });

    app.use((err, req, res, next) => {
      console.error("‚ùå ‰º∫ÊúçÂô®ÈåØË™§:", err);
      res.status(500).json({ error: "‰º∫ÊúçÂô®ÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ" });
    });

    // ‚úÖ ÈáçÈªûÔºöRender Ë¶ÅÊ±ÇÁî® process.env.PORT
    app.listen(PORT, () => {
      console.log(`üöÄ Server is running on port ${PORT}`);
    });

  })
  .catch((err) => {
    console.error("‚ùå MongoDB ÈÄ£Êé•Â§±Êïó:", err);
    process.exit(1);
  });

mongoose.connection.on("error", err => {
  console.error("‚ùå MongoDB ÈåØË™§:", err);
});

mongoose.connection.on("disconnected", () => {
  console.warn("‚ö†Ô∏è MongoDB ‰∏≠Êñ∑ÈÄ£Á∑ö");
});

    // ‚úÖ Ê∏¨Ë©¶ API
    app.get("/api", (req, res) => {
      res.json({ message: "üöÄ HiHiTutor API is running!" });
    });

    // ‚úÖ È¶ñÈ†ÅË∑ØÁî±Ë™™Êòé
    app.get("/", (req, res) => {
      res.json({ message: "‚úÖ HiHiTutor API Â∑≤ÂïüÂãïÔºåË´ã‰ΩøÁî® /api ÈñãÈ†≠ÁöÑË∑ØÁî±„ÄÇ" });
    });

    // ‚úÖ ËôïÁêÜ 404 ÈåØË™§
    app.use((req, res, next) => {
      res.status(404).json({ error: "‚ùå API Ë∑ØÁî±‰∏çÂ≠òÂú®" });
    });

    // ‚úÖ ‰º∫ÊúçÂô®ÈåØË™§ËôïÁêÜ
    app.use((err, req, res, next) => {
      console.error("‚ùå ‰º∫ÊúçÂô®ÈåØË™§:", err);
      res.status(500).json({ error: "‰º∫ÊúçÂô®ÈåØË™§ÔºåË´ãÁ®çÂæåÂÜçË©¶„ÄÇ" });
    });

    // ‚úÖ ÂïüÂãï‰º∫ÊúçÂô®
    app.listen(PORT, () => {
      console.log(`üöÄ ‰º∫ÊúçÂô®ÈÅãË°åÊñº http://localhost:${PORT}`);
    });
  })
  .catch((err) => {
    console.error("‚ùå ÈÄ£Êé• MongoDB Â§±Êïó:", err);
    process.exit(1);
  });
